@model Orca_Gamma.Models.DatabaseModels.PrivateMessagePost

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Write Your Message</h4>
        <h5>Type each recipient's Username seperated by commas.</h5>
        <hr />
        @*@Html.ValidationSummary(true, "One or more valid recipients required", new { @class = "text-danger" })*@
        @*Gotta use the createdby model to temporarily transfer the recipients to the controller, because the privatemessagepost model doesn't support that.*@
        <div class="form-group">
            @Html.LabelFor(model => model.CreatedBy, "Recipient(s)", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (ViewBag.error != null)
                {
                    <div class="text-danger">
                        @ViewBag.error
                    </div>
                }
                @Html.TextBoxFor(model => model.CreatedBy, new { @Value = ViewBag.Recipient, style = "width:400px;" })
                @Html.ValidationMessageFor(model => model.CreatedBy, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PrivateMessage.Subject, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PrivateMessage.Subject, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PrivateMessage.Subject, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Body, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Body, 5, 200, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Body, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
